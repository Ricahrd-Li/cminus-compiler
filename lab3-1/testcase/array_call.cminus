int call(int a, int b){
    return a;
}

int callmom(int a, int b){
    return a;
}


int callhim(int a[], int b){
    return a[0];
}

int callher(int a[], int b[],int n){
    return a[n];
}


int main(void){
   int a[10];
   int b;
   int c;
   int d[5];
   a[1] = 7;
   d[1] = 1;
   b = 1;
   a[2] = 10;
<<<<<<< HEAD
   b = call(a,b);
   output(b);
   return b;
=======

   c = call(a[0],b);
   c = call(a[b],b);
   c = call(a[ d[1] ], b );
   c = call(a[ d[ d[ d[1] ] ] ], b );
   c = call(a[ d[ d[ d[1] ] ] ] * d[1], b );

   c = callmom(a[ d[ d[ d[1] ] ] ] > d[1], b );
   c = callmom((a[ d[ d[ d[1] ] ] ] > d[1]) * a[ d[ d[ d[1] ] ] ] + 1, b );
   c = callmom((a[ d[ d[ d[1] ] ] ] > d[1]) + a[ d[ d[ d[1] ] ] ] * 6, b );

   if ((a[ d[ d[ d[1] ] ] ] > d[1]))  c = (a[ d[1] ] * d[1] ) + 10 - b;
   else{
        c = (a[ d[ d[ d[1] ] ] ] > d[1]) + a[ d[ d[ d[1] ] ] ] * 6;
        if (b == 1) c = 0;
        else return c;
    }
   while((a[ d[ d[ d[1] ] ] ] > b)){
        b = b + 1;
   }

   return callmom(a[ d[ d[ d[1] ] ] ] > d[1], b );;
>>>>>>> bc5721c66f104b04332acc896e9d2488c11153a1
}